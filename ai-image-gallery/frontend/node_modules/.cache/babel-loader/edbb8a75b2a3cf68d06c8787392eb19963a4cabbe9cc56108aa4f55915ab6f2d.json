{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Gallery Organizer\\\\ai-image-gallery\\\\frontend\\\\src\\\\pages\\\\FavoritesPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Navbar from '../components/NavbarGallery';\nimport Sidebar from '../components/SidebarFav';\nimport ImageCard from '../components/ImageCard';\nimport '../styles/Gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FavoritesPage = () => {\n  _s();\n  const [images, setImages] = useState([]); // All images\n  const [filteredImages, setFilteredImages] = useState([]); // Only favorited images\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch images when the component mounts\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const imageResponse = await axios.get('http://localhost:5000/api/images');\n        setImages(imageResponse.data);\n        setFilteredImages(imageResponse.data.filter(image => image.favorited === true)); // Filter only favorited images\n      } catch (err) {\n        setError('Failed to fetch data');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []); // No dependency, this will run once on mount\n\n  // Handle image click\n  const handleCardClick = (type, id) => {\n    if (type === 'image') {\n      navigate(`/images/${id}`);\n    }\n  };\n\n  // Handle trash click - update trashed status in the database\n  const handleTrash = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/images/${id}/trash`, {\n        trashed: true\n      });\n      setImages(images.filter(image => image._id !== id));\n      setFilteredImages(filteredImages.filter(image => image._id !== id)); // Re-filter images after trashing\n    } catch (err) {\n      console.error('Error trashing image:', err);\n    }\n  };\n\n  // Handle favorite click - use appropriate API call based on favorited status\n  const handleFavorite = async (id, favorited) => {\n    try {\n      if (favorited) {\n        // Call the API to delete from favorites\n        await axios.put(`http://localhost:5000/api/images/${id}/favoriteDelete`);\n      } else {\n        // Call the API to add to favorites\n        await axios.put(`http://localhost:5000/api/images/${id}/favorite`, {\n          favorited: true\n        });\n      }\n\n      // Update the state after the API call\n      setImages(images.map(image => image._id === id ? {\n        ...image,\n        favorited: !favorited\n      } : image));\n\n      // Update the filtered images to reflect the changes\n      if (favorited) {\n        setFilteredImages(filteredImages.filter(image => image._id !== id)); // Remove from favorites\n      } else {\n        setFilteredImages([...filteredImages, images.find(image => image._id === id)]); // Add to favorites\n      }\n    } catch (err) {\n      console.error('Error handling favorite status:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        setView: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-content\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), filteredImages.length > 0 ? filteredImages.map(image => /*#__PURE__*/_jsxDEV(ImageCard, {\n          type: \"image\",\n          data: image,\n          onClick: () => handleCardClick('image', image._id),\n          onTrash: handleTrash // Pass the onTrash handler\n          ,\n          onFavorite: id => handleFavorite(id, image.favorited) // Pass the onFavorite handler\n        }, image._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No favorite images found.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(FavoritesPage, \"1+2lkp9W23OBybbl/CEBimtHayM=\", false, function () {\n  return [useNavigate];\n});\n_c = FavoritesPage;\nexport default FavoritesPage;\nvar _c;\n$RefreshReg$(_c, \"FavoritesPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Navbar","Sidebar","ImageCard","jsxDEV","_jsxDEV","FavoritesPage","_s","images","setImages","filteredImages","setFilteredImages","loading","setLoading","error","setError","navigate","fetchData","imageResponse","get","data","filter","image","favorited","err","console","handleCardClick","type","id","handleTrash","put","trashed","_id","handleFavorite","map","find","className","children","fileName","_jsxFileName","lineNumber","columnNumber","setView","length","onClick","onTrash","onFavorite","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Gallery Organizer/ai-image-gallery/frontend/src/pages/FavoritesPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Navbar from '../components/NavbarGallery';\r\nimport Sidebar from '../components/SidebarFav';\r\nimport ImageCard from '../components/ImageCard';\r\nimport '../styles/Gallery.css';\r\n\r\nconst FavoritesPage = () => {\r\n  const [images, setImages] = useState([]); // All images\r\n  const [filteredImages, setFilteredImages] = useState([]); // Only favorited images\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch images when the component mounts\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const imageResponse = await axios.get('http://localhost:5000/api/images');\r\n        setImages(imageResponse.data);\r\n        setFilteredImages(imageResponse.data.filter(image => image.favorited === true)); // Filter only favorited images\r\n      } catch (err) {\r\n        setError('Failed to fetch data');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // No dependency, this will run once on mount\r\n\r\n  // Handle image click\r\n  const handleCardClick = (type, id) => {\r\n    if (type === 'image') {\r\n      navigate(`/images/${id}`);\r\n    }\r\n  };\r\n\r\n  // Handle trash click - update trashed status in the database\r\n  const handleTrash = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/images/${id}/trash`, { trashed: true });\r\n      setImages(images.filter(image => image._id !== id));\r\n      setFilteredImages(filteredImages.filter(image => image._id !== id));  // Re-filter images after trashing\r\n    } catch (err) {\r\n      console.error('Error trashing image:', err);\r\n    }\r\n  };\r\n\r\n  // Handle favorite click - use appropriate API call based on favorited status\r\n  const handleFavorite = async (id, favorited) => {\r\n    try {\r\n      if (favorited) {\r\n        // Call the API to delete from favorites\r\n        await axios.put(`http://localhost:5000/api/images/${id}/favoriteDelete`);\r\n      } else {\r\n        // Call the API to add to favorites\r\n        await axios.put(`http://localhost:5000/api/images/${id}/favorite`, { favorited: true });\r\n      }\r\n\r\n      // Update the state after the API call\r\n      setImages(images.map(image => \r\n        image._id === id ? { ...image, favorited: !favorited } : image\r\n      ));\r\n\r\n      // Update the filtered images to reflect the changes\r\n      if (favorited) {\r\n        setFilteredImages(filteredImages.filter(image => image._id !== id)); // Remove from favorites\r\n      } else {\r\n        setFilteredImages([...filteredImages, images.find(image => image._id === id)]); // Add to favorites\r\n      }\r\n    } catch (err) {\r\n      console.error('Error handling favorite status:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-page\">\r\n      <Navbar />\r\n      <div className=\"main-content\">\r\n        <Sidebar setView={() => {}} /> {/* Sidebar with no view change */}\r\n        <div className=\"gallery-content\">\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>{error}</p>}\r\n          {filteredImages.length > 0 ? (\r\n            filteredImages.map((image) => (\r\n              <ImageCard\r\n                key={image._id}\r\n                type=\"image\"\r\n                data={image}\r\n                onClick={() => handleCardClick('image', image._id)}\r\n                onTrash={handleTrash}  // Pass the onTrash handler\r\n                onFavorite={(id) => handleFavorite(id, image.favorited)}  // Pass the onFavorite handler\r\n              />\r\n            ))\r\n          ) : (\r\n            <p>No favorite images found.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}