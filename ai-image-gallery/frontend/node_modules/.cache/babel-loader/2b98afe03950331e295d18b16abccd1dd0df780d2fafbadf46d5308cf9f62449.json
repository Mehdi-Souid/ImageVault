{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Gallery Organizer\\\\ai-image-gallery\\\\frontend\\\\src\\\\pages\\\\GalleryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Import axios for making API calls\nimport Navbar from '../components/NavbarGallery';\nimport Sidebar from '../components/SideBar';\nimport ImageCard from '../components/ImageCard';\nimport '../styles/Gallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryPage = () => {\n  _s();\n  const [view, setView] = useState('categories'); // 'categories' or 'images'\n  const [categories, setCategories] = useState([]); // Store categories\n  const [images, setImages] = useState([]); // Store images\n  const [loading, setLoading] = useState(false); // Loading state\n  const [error, setError] = useState(null); // Error state\n  const navigate = useNavigate();\n\n  // Fetch categories and images when component mounts or view changes\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (view === 'categories') {\n          const categoryResponse = await axios.get('http://localhost:5000/api/categories');\n          setCategories(categoryResponse.data);\n        } else {\n          const imageResponse = await axios.get('http://localhost:5000/api/images');\n          setImages(imageResponse.data);\n        }\n      } catch (err) {\n        setError('Failed to fetch data');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [view]); // Fetch data every time view changes\n\n  const handleCardClick = (type, id) => {\n    if (type === 'category') {\n      navigate(`/category/${id}`); // Navigate to category page\n    } else if (type === 'image') {\n      navigate(`/image/${id}`); // Navigate to image details page\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        setView: setView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-content\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), view === 'categories' ? categories.map(category => /*#__PURE__*/_jsxDEV(ImageCard, {\n          type: \"category\",\n          data: category,\n          onClick: () => handleCardClick('category', category.id)\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)) : images.map(image => /*#__PURE__*/_jsxDEV(ImageCard, {\n          type: \"image\",\n          data: image,\n          onClick: () => handleCardClick('image', image.id)\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(GalleryPage, \"fGR8u3+ko+OHznNl1Zr2nkvzULM=\", false, function () {\n  return [useNavigate];\n});\n_c = GalleryPage;\nexport default GalleryPage;\nvar _c;\n$RefreshReg$(_c, \"GalleryPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","Navbar","Sidebar","ImageCard","jsxDEV","_jsxDEV","GalleryPage","_s","view","setView","categories","setCategories","images","setImages","loading","setLoading","error","setError","navigate","fetchData","categoryResponse","get","data","imageResponse","err","console","handleCardClick","type","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","onClick","image","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Gallery Organizer/ai-image-gallery/frontend/src/pages/GalleryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';  // Import axios for making API calls\r\nimport Navbar from '../components/NavbarGallery';\r\nimport Sidebar from '../components/SideBar';\r\nimport ImageCard from '../components/ImageCard';\r\nimport '../styles/Gallery.css';\r\n\r\nconst GalleryPage = () => {\r\n  const [view, setView] = useState('categories'); // 'categories' or 'images'\r\n  const [categories, setCategories] = useState([]); // Store categories\r\n  const [images, setImages] = useState([]); // Store images\r\n  const [loading, setLoading] = useState(false); // Loading state\r\n  const [error, setError] = useState(null); // Error state\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch categories and images when component mounts or view changes\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (view === 'categories') {\r\n          const categoryResponse = await axios.get('http://localhost:5000/api/categories');\r\n          setCategories(categoryResponse.data);\r\n        } else {\r\n          const imageResponse = await axios.get('http://localhost:5000/api/images');\r\n          setImages(imageResponse.data);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch data');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [view]); // Fetch data every time view changes\r\n\r\n  const handleCardClick = (type, id) => {\r\n    if (type === 'category') {\r\n      navigate(`/category/${id}`); // Navigate to category page\r\n    } else if (type === 'image') {\r\n      navigate(`/image/${id}`); // Navigate to image details page\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-page\">\r\n      <Navbar />\r\n      <div className=\"main-content\">\r\n        <Sidebar setView={setView} />\r\n        <div className=\"gallery-content\">\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>{error}</p>}\r\n          {view === 'categories'\r\n            ? categories.map((category) => (\r\n                <ImageCard\r\n                  key={category.id}\r\n                  type=\"category\"\r\n                  data={category}\r\n                  onClick={() => handleCardClick('category', category.id)}\r\n                />\r\n              ))\r\n            : images.map((image) => (\r\n                <ImageCard\r\n                  key={image.id}\r\n                  type=\"image\"\r\n                  data={image}\r\n                  onClick={() => handleCardClick('image', image.id)}\r\n                />\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GalleryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}