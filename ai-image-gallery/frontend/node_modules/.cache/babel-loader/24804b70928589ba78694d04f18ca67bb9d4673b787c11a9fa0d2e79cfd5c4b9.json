{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api/users'; // Ensure this points to the correct base URL for user routes\n\nconst authService = {\n  // Sign-up function\n  signUp: async (username, password) => {\n    try {\n      const response = await axios.post(API_URL, {\n        username,\n        password\n      });\n      return response.data; // Response from the API after user creation\n    } catch (error) {\n      console.error('Error signing up:', error);\n      throw error; // You may want to handle errors gracefully in the UI\n    }\n  },\n  // Sign-in function\n  signIn: async (username, password) => {\n    try {\n      const response = await axios.post(`${API_URL}/signin`, {\n        username,\n        password\n      });\n      return response.data; // Response from the API after sign-in attempt\n    } catch (error) {\n      console.error('Error signing in:', error);\n      throw error; // Handle errors gracefully\n    }\n  }\n};\nexport default authService;","map":{"version":3,"names":["axios","API_URL","authService","signUp","username","password","response","post","data","error","console","signIn"],"sources":["C:/Users/Mehdi/Desktop/Gallery Organizer/ai-image-gallery/frontend/src/services/authService.js"],"sourcesContent":["import axios from 'axios';\r\nconst API_URL = 'http://localhost:5000/api/users';  // Ensure this points to the correct base URL for user routes\r\n\r\nconst authService = {\r\n  // Sign-up function\r\n  signUp: async (username, password) => {\r\n    try {\r\n      const response = await axios.post(API_URL, { username, password });\r\n      return response.data;  // Response from the API after user creation\r\n    } catch (error) {\r\n      console.error('Error signing up:', error);\r\n      throw error;  // You may want to handle errors gracefully in the UI\r\n    }\r\n  },\r\n\r\n  // Sign-in function\r\n  signIn: async (username, password) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/signin`, { username, password });\r\n      return response.data;  // Response from the API after sign-in attempt\r\n    } catch (error) {\r\n      console.error('Error signing in:', error);\r\n      throw error;  // Handle errors gracefully\r\n    }\r\n  },\r\n};\r\n\r\nexport default authService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,OAAO,GAAG,iCAAiC,CAAC,CAAE;;AAEpD,MAAMC,WAAW,GAAG;EAClB;EACAC,MAAM,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAACN,OAAO,EAAE;QAAEG,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAClE,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAE;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK,CAAC,CAAE;IAChB;EACF,CAAC;EAED;EACAE,MAAM,EAAE,MAAAA,CAAOP,QAAQ,EAAEC,QAAQ,KAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,GAAGN,OAAO,SAAS,EAAE;QAAEG,QAAQ;QAAEC;MAAS,CAAC,CAAC;MAC9E,OAAOC,QAAQ,CAACE,IAAI,CAAC,CAAE;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;MACzC,MAAMA,KAAK,CAAC,CAAE;IAChB;EACF;AACF,CAAC;AAED,eAAeP,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}