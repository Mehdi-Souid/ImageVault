{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Gallery Organizer\\\\ai-image-gallery\\\\frontend\\\\src\\\\pages\\\\GalleryPage.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GalleryPage = () => {\n  _s();\n  const [view, setView] = useState('categories');\n  const [categories, setCategories] = useState([]);\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Fetch categories and images when component mounts or view changes\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        if (view === 'categories') {\n          const categoryResponse = await axios.get('http://localhost:5000/api/categories');\n          setCategories(categoryResponse.data);\n        } else {\n          const imageResponse = await axios.get('http://localhost:5000/api/images');\n          setImages(imageResponse.data);\n        }\n      } catch (err) {\n        setError('Failed to fetch data');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [view]);\n\n  // Handle image click\n  const handleCardClick = (type, id) => {\n    if (type === 'category') {\n      navigate(`/category/${id}`);\n    } else if (type === 'image') {\n      navigate(`/image/${id}`);\n    }\n  };\n\n  // Handle trash click - update trashed status in the database\n  const handleTrash = async id => {\n    try {\n      await axios.put(`http://localhost:5000/api/images/${id}/trash`, {\n        trashed: true\n      });\n      // Optionally, update the local state or refetch images to reflect changes\n      setImages(images.filter(image => image._id !== id)); // Remove trashed image from local state\n    } catch (err) {\n      console.error('Error trashing image:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-page\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        setView: setView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-content\",\n        children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 23\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), view === 'categories' ? categories.map(category => /*#__PURE__*/_jsxDEV(ImageCard, {\n          type: \"category\",\n          data: category,\n          onClick: () => handleCardClick('category', category._id)\n        }, category._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)) : images.map(image => /*#__PURE__*/_jsxDEV(ImageCard, {\n          type: \"image\",\n          data: image,\n          onClick: () => handleCardClick('image', image._id),\n          onTrash: handleTrash // Pass the onTrash handler\n        }, image._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(GalleryPage, \"fGR8u3+ko+OHznNl1Zr2nkvzULM=\", true);\n_c = GalleryPage;\nvar _c;\n$RefreshReg$(_c, \"GalleryPage\");","map":{"version":3,"names":["GalleryPage","_s","view","setView","useState","categories","setCategories","images","setImages","loading","setLoading","error","setError","navigate","useNavigate","useEffect","fetchData","categoryResponse","axios","get","data","imageResponse","err","console","handleCardClick","type","id","handleTrash","put","trashed","filter","image","_id","_jsxDEV","className","children","Navbar","fileName","_jsxFileName","lineNumber","columnNumber","Sidebar","map","category","ImageCard","onClick","onTrash","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Gallery Organizer/ai-image-gallery/frontend/src/pages/GalleryPage.js"],"sourcesContent":["const GalleryPage = () => {\r\n  const [view, setView] = useState('categories');\r\n  const [categories, setCategories] = useState([]);\r\n  const [images, setImages] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch categories and images when component mounts or view changes\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        if (view === 'categories') {\r\n          const categoryResponse = await axios.get('http://localhost:5000/api/categories');\r\n          setCategories(categoryResponse.data);\r\n        } else {\r\n          const imageResponse = await axios.get('http://localhost:5000/api/images');\r\n          setImages(imageResponse.data);\r\n        }\r\n      } catch (err) {\r\n        setError('Failed to fetch data');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [view]);\r\n\r\n  // Handle image click\r\n  const handleCardClick = (type, id) => {\r\n    if (type === 'category') {\r\n      navigate(`/category/${id}`);\r\n    } else if (type === 'image') {\r\n      navigate(`/image/${id}`);\r\n    }\r\n  };\r\n\r\n  // Handle trash click - update trashed status in the database\r\n  const handleTrash = async (id) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/api/images/${id}/trash`, { trashed: true });\r\n      // Optionally, update the local state or refetch images to reflect changes\r\n      setImages(images.filter(image => image._id !== id)); // Remove trashed image from local state\r\n    } catch (err) {\r\n      console.error('Error trashing image:', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gallery-page\">\r\n      <Navbar />\r\n      <div className=\"main-content\">\r\n        <Sidebar setView={setView} />\r\n        <div className=\"gallery-content\">\r\n          {loading && <p>Loading...</p>}\r\n          {error && <p>{error}</p>}\r\n          {view === 'categories'\r\n            ? categories.map((category) => (\r\n                <ImageCard\r\n                  key={category._id}\r\n                  type=\"category\"\r\n                  data={category}\r\n                  onClick={() => handleCardClick('category', category._id)}\r\n                />\r\n              ))\r\n            : images.map((image) => (\r\n                <ImageCard\r\n                  key={image._id}\r\n                  type=\"image\"\r\n                  data={image}\r\n                  onClick={() => handleCardClick('image', image._id)}\r\n                  onTrash={handleTrash}  // Pass the onTrash handler\r\n                />\r\n              ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}