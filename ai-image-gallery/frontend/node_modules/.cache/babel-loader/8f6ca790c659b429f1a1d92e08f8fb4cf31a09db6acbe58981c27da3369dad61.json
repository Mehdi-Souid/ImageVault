{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mehdi\\\\Desktop\\\\Gallery Organizer\\\\ai-image-gallery\\\\frontend\\\\src\\\\components\\\\ImageCard.js\";\nimport React from 'react';\nimport '../styles/ImageCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCard = ({\n  type,\n  data,\n  onClick\n}) => {\n  if (type === 'category') {\n    const {\n      name,\n      images = [],\n      count\n    } = data;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card category-card\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-grid\",\n        children: images.length > 0 ? images.slice(0, 4).map(image => {\n          // Ensure imagePath is valid before splitting\n          const imagePath = image.imagePath || '';\n          const imageUrl = imagePath ? `http://localhost:5000/uploads/${imagePath.split('\\\\').pop()}` : '';\n          return /*#__PURE__*/_jsxDEV(\"img\", {\n            src: imageUrl || 'http://localhost:5000/uploads/default-image.jpg' // Default image if path is invalid\n            ,\n            alt: name,\n            className: \"thumbnail\"\n          }, image._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this);\n        }) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No images available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [count, \" Images\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else if (type === 'image') {\n    const {\n      imagePath,\n      name,\n      date\n    } = data;\n\n    // Ensure imagePath is valid before splitting\n    const imageUrl = imagePath ? `http://localhost:5000/uploads/${imagePath.split('\\\\').pop()}` : '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card image-card\",\n      onClick: onClick,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl || 'http://localhost:5000/uploads/default-image.jpg' // Default image if path is invalid\n        ,\n        alt: name,\n        className: \"thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  }\n  return null;\n};\n_c = ImageCard;\nexport default ImageCard;\nvar _c;\n$RefreshReg$(_c, \"ImageCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ImageCard","type","data","onClick","name","images","count","className","children","length","slice","map","image","imagePath","imageUrl","split","pop","src","alt","_id","fileName","_jsxFileName","lineNumber","columnNumber","date","_c","$RefreshReg$"],"sources":["C:/Users/Mehdi/Desktop/Gallery Organizer/ai-image-gallery/frontend/src/components/ImageCard.js"],"sourcesContent":["import React from 'react';\r\nimport '../styles/ImageCard.css';\r\n\r\nconst ImageCard = ({ type, data, onClick }) => {\r\n  if (type === 'category') {\r\n    const { name, images = [], count } = data;\r\n\r\n    return (\r\n      <div className=\"card category-card\" onClick={onClick}>\r\n        <div className=\"image-grid\">\r\n          {images.length > 0 ? (\r\n            images.slice(0, 4).map((image) => {\r\n              // Ensure imagePath is valid before splitting\r\n              const imagePath = image.imagePath || '';\r\n              const imageUrl = imagePath ? `http://localhost:5000/uploads/${imagePath.split('\\\\').pop()}` : '';\r\n\r\n              return (\r\n                <img\r\n                  key={image._id}\r\n                  src={imageUrl || 'http://localhost:5000/uploads/default-image.jpg'} // Default image if path is invalid\r\n                  alt={name}\r\n                  className=\"thumbnail\"\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <p>No images available</p>\r\n          )}\r\n        </div>\r\n        <div className=\"category-info\">\r\n          <h3>{name}</h3>\r\n          <p>{count} Images</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (type === 'image') {\r\n    const { imagePath, name, date } = data;\r\n\r\n    // Ensure imagePath is valid before splitting\r\n    const imageUrl = imagePath ? `http://localhost:5000/uploads/${imagePath.split('\\\\').pop()}` : '';\r\n\r\n    return (\r\n      <div className=\"card image-card\" onClick={onClick}>\r\n        <img\r\n          src={imageUrl || 'http://localhost:5000/uploads/default-image.jpg'} // Default image if path is invalid\r\n          alt={name}\r\n          className=\"thumbnail\"\r\n        />\r\n        <div className=\"image-info\">\r\n          <h4>{name}</h4>\r\n          <p>{date}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default ImageCard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,IAAI;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EAC7C,IAAIF,IAAI,KAAK,UAAU,EAAE;IACvB,MAAM;MAAEG,IAAI;MAAEC,MAAM,GAAG,EAAE;MAAEC;IAAM,CAAC,GAAGJ,IAAI;IAEzC,oBACEH,OAAA;MAAKQ,SAAS,EAAC,oBAAoB;MAACJ,OAAO,EAAEA,OAAQ;MAAAK,QAAA,gBACnDT,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAC,QAAA,EACxBH,MAAM,CAACI,MAAM,GAAG,CAAC,GAChBJ,MAAM,CAACK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAK;UAChC;UACA,MAAMC,SAAS,GAAGD,KAAK,CAACC,SAAS,IAAI,EAAE;UACvC,MAAMC,QAAQ,GAAGD,SAAS,GAAG,iCAAiCA,SAAS,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE;UAEhG,oBACEjB,OAAA;YAEEkB,GAAG,EAAEH,QAAQ,IAAI,iDAAkD,CAAC;YAAA;YACpEI,GAAG,EAAEd,IAAK;YACVG,SAAS,EAAC;UAAW,GAHhBK,KAAK,CAACO,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIf,CAAC;QAEN,CAAC,CAAC,gBAEFxB,OAAA;UAAAS,QAAA,EAAG;QAAmB;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACNxB,OAAA;QAAKQ,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC5BT,OAAA;UAAAS,QAAA,EAAKJ;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACfxB,OAAA;UAAAS,QAAA,GAAIF,KAAK,EAAC,SAAO;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC,MAAM,IAAItB,IAAI,KAAK,OAAO,EAAE;IAC3B,MAAM;MAAEY,SAAS;MAAET,IAAI;MAAEoB;IAAK,CAAC,GAAGtB,IAAI;;IAEtC;IACA,MAAMY,QAAQ,GAAGD,SAAS,GAAG,iCAAiCA,SAAS,CAACE,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE;IAEhG,oBACEjB,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAACJ,OAAO,EAAEA,OAAQ;MAAAK,QAAA,gBAChDT,OAAA;QACEkB,GAAG,EAAEH,QAAQ,IAAI,iDAAkD,CAAC;QAAA;QACpEI,GAAG,EAAEd,IAAK;QACVG,SAAS,EAAC;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFxB,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBT,OAAA;UAAAS,QAAA,EAAKJ;QAAI;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACfxB,OAAA;UAAAS,QAAA,EAAIgB;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EACA,OAAO,IAAI;AACb,CAAC;AAACE,EAAA,GArDIzB,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}